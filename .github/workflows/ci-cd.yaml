name: Helm Chart CI/CD

on:
  pull_request:
    paths:
      - 'charts/**'
  push:
    branches:
      - main
    paths:
      - 'charts/**'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.18.2

      - name: Add Helm repos from chart dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          npm install -g yq
          charts=$(cat changed.txt 2>/dev/null || find charts -mindepth 1 -maxdepth 1 -type d)
          repos=""
          for chart in $charts; do
            if [ -f "$chart/Chart.yaml" ]; then
              yq '.dependencies // [] | .[] | .repository' "$chart/Chart.yaml"
            fi
          done | sort | uniq | while read repo; do
            if [ -n "$repo" ]; then
              name=$(echo "$repo" | sed 's|https\?://||;s|/|_|g')
              helm repo add "$name" "$repo" || true
            fi
          done

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Lint changed charts
        run: ct lint --config .github/ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1

      - name: Test install changed charts
        run: ct install --config .github/ct.yaml

      - name: Find changed charts
        id: changed
        run: |
          ct list-changed --config .github/ct.yaml > changed.txt
          echo "charts=$(cat changed.txt | tr '\n' ',' | sed 's/,$//')" >> $GITHUB_OUTPUT

      - name: Ensure README and CHANGELOG updated
        if: steps.changed.outputs.charts != ''
        run: |
          missing=""
          for chart in $(cat changed.txt); do
            if ! git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -q "^$chart/README.md$"; then
              echo "README.md not updated for $chart"
              missing="yes"
            fi
            if ! git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -q "^$chart/CHANGELOG.md$"; then
              echo "CHANGELOG.md not updated for $chart"
              missing="yes"
            fi
          done
          if [ "$missing" = "yes" ]; then
            echo "Please update README.md and CHANGELOG.md for all changed charts."
            exit 1
          fi

      - name: Set up Node.js for generators
        if: steps.changed.outputs.charts != ''
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install readme and changelog generators
        if: steps.changed.outputs.charts != ''
        run: |
          npm install -g @bitnami/readme-generator-for-helm conventional-changelog-cli

      - name: Generate and check README and CHANGELOG
        if: steps.changed.outputs.charts != ''
        run: |
          need_update=""
          for chart in $(cat changed.txt); do
            # Generate README
            npx @bitnami/readme-generator-for-helm --readme $chart/README.md --values $chart/values.yaml
            # Check for uncommitted changes in README.md
            if git status -s | grep $chart/README.md; then
              echo "README.md for $chart is not up to date. Please run @bitnami/readme-generator-for-helm."
              need_update="yes"
            fi

            # Check that CHANGELOG.md was updated
            if ! git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -q "^$chart/CHANGELOG.md$"; then
              echo "CHANGELOG.md not updated for $chart. Please run conventional-changelog-cli."
              need_update="yes"
            fi
          done
          if [ "$need_update" = "yes" ]; then
            exit 1
          fi

  publish:
    runs-on: ubuntu-latest
    needs: lint-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.18.2

      - name: Add Helm repos from chart dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          npm install -g yq
          charts=$(cat changed.txt 2>/dev/null || find charts -mindepth 1 -maxdepth 1 -type d)
          repos=""
          for chart in $charts; do
            if [ -f "$chart/Chart.yaml" ]; then
              yq '.dependencies // [] | .[] | .repository' "$chart/Chart.yaml"
            fi
          done | sort | uniq | while read repo; do
            if [ -n "$repo" ]; then
              name=$(echo "$repo" | sed 's|https\?://||;s|/|_|g')
              helm repo add "$name" "$repo" || true
            fi
          done

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Detect and package changed charts
        id: detect
        run: |
          mkdir -p .cr-release-packages
          mkdir -p .cr-existing-index

          # Clone existing gh-pages to get current index.yaml
          git fetch origin gh-pages
          git show origin/gh-pages:index.yaml > .cr-existing-index/index.yaml || echo "existing index not found"

          # Find all charts in /charts
          charts=$(find charts -mindepth 1 -maxdepth 1 -type d)

          # Determine which ones need packaging
          to_package=""
          for chart in $charts; do
            name=$(yq '.name' $chart/Chart.yaml)
            version=$(yq '.version' $chart/Chart.yaml)

            if ! grep -q "$name" .cr-existing-index/index.yaml 2>/dev/null || \
              ! grep -q "$version" .cr-existing-index/index.yaml 2>/dev/null; then
              echo "New chart or version: $name-$version"
              helm package $chart --destination .cr-release-packages
              to_package+="$chart,"
            fi
          done

          to_package=${to_package%,} # Trim trailing comma
          echo "charts=$to_package" >> $GITHUB_OUTPUT

      - name: Update index.yaml
        if: steps.detect.outputs.charts != ''
        run: |
          helm repo index .cr-release-packages --url https://openwallet-foundation.github.io/helm-charts/

      - name: Deploy to GitHub Pages
        if: steps.detect.outputs.charts != ''
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .cr-release-packages
          publish_branch: gh-pages
